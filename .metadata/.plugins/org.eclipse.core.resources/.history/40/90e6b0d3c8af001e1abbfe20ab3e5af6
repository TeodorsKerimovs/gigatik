/*
 * uart.c
 *
 *  Created on: Jan 10, 2024
 *      Author: teodors.kerimovs
 */

#include "uart.h"

void ConfigureUART(void)
{

	// set databits
	// set parity to 0
	// set stop bits to 1
	// set receive interupt

	ring_buffer_setup(&rb, data_buffer, RING_BUFFER_SIZE);

	// Set the baud rate to 9600.
	uint32_t SystemCoreClock = 8000000;
	uint16_t uartdiv = SystemCoreClock / 9600;

	USART2->BRR = ( ( ( uartdiv / 16 ) << USART_BRR_DIV_Mantissa_Pos ) |
	                ( ( uartdiv % 16 ) << USART_BRR_DIV_Fraction_Pos ) );

	// Configure pins A2, A3 for USART2.
	GPIOA->CRL    &= ( GPIO_CRL_MODE2 |
					 GPIO_CRL_CNF2 |
					 GPIO_CRL_MODE3 |
					 GPIO_CRL_CNF3 );

	GPIOA->CRL    |= ( ( 0x1 << GPIO_CRL_MODE2_Pos ) |
					 ( 0x2 << GPIO_CRL_CNF2_Pos ) |
					 ( 0x0 << GPIO_CRL_MODE3_Pos ) |
					 ( 0x1 << GPIO_CRL_CNF3_Pos ) );


	NVIC_SetPriorityGrouping( 0 );
	uint32_t uart_pri_encoding = NVIC_EncodePriority( 0, 2, 0 );
 	NVIC_SetPriority( USART2_IRQn, uart_pri_encoding );
	NVIC_EnableIRQ( USART2_IRQn );
}

void EnableUART(void){
	// Enable the USART peripheral with interrupt
	USART2->CR1 |= ( USART_CR1_RE |
					 USART_CR1_TE |
					 USART_CR1_UE |
					 USART_CR1_RXNEIE );
}




